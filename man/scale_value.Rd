% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_value.R
\name{scale_value}
\alias{scale_value}
\title{Scales values for use on a secondary axis in ggplot.}
\usage{
scale_value(value, first, second)
}
\arguments{
\item{value}{The value requiring rescaling}

\item{first}{List of values that determines the primary axis}

\item{second}{List of values that determines the secondary axis}
}
\value{
Rescaled and transformed values that will fit on the primary axis
}
\description{
This function, combined with \code{\link[=scale_axis]{scale_axis()}}, makes it easy to use a secondary axis in ggplot. Simply supply the possible values for both axes to rescale values for the secondary axis.
This function calculates the values if they were plotted on the original by shifting the values (subtracting the minimum value of the second set from the minimum of the first set) and rescaling them by the difference in variance between the two sets.
Simply put: \code{value = (shift + value) / scale}
}
\examples{
library(ggplot2)
library(lubridate)
dataset = data.frame(t=seq(ymd("2023-01-01"), ymd("2023-01-10"), 1),
                     primary=1:10,
                     secondary=log(1:10))
ggplot(dataset) +
  geom_point(aes(x=t, y=primary)) +
  geom_line(aes(x=t, y=scale_value(secondary, primary, secondary))) +
  scale_y_continuous(sec.axis=sec_axis(~scale_axis(., dataset$primary, dataset$secondary),
                                       name="Log"))

}
\seealso{
\code{\link[=scale_axis]{scale_axis()}}, \code{\link[=sec_axis]{sec_axis()}}
}
